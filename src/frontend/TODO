- ask/provide abstraction for bypass (in backend and frontend)
- support for aggregates and type lowering pass
- support for "macros" in C++ (as codegen visitor pass hooks)
- transactional state macros (or primitives?)
- superscalar primitive? (alters the pipelining transform)
- proper lexical scope and non-hacky function inlining
- conditional/blocking port hooks
- support for macros in some other language (Lua? Figure out a way to wrap the
  codegen API and the AST-with-pass-annotations nicely)
- rework the AST as either protobufs or (maybe) something more
  custom/lighter-weight with explicit visitor support
- support pragmas to set various timing-model options and/or choose different
  timing models
- rewrite the whole thing now that I understand the problem space better
